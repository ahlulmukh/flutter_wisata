import 'package:dio/dio.dart';
import 'package:flutter/material.dart';
import 'package:flutter_barcode_scanner/flutter_barcode_scanner.dart';
import 'package:flutter_tugas_akhir/services/service.dart';
import 'package:shared_preferences/shared_preferences.dart';

class ScanPage extends StatefulWidget {
  const ScanPage({Key? key}) : super(key: key);

  @override
  _ScanPageState createState() => _ScanPageState();
}

class _ScanPageState extends State<ScanPage> {
  String scannedData = '';
  String qrcodeUrl =
      'https://d2d9-180-241-47-159.ngrok-free.app/storage/assets/qrcodes/1686604600.png';

  Future<void> _scanQRCode() async {
    String barcodeScanRes = await FlutterBarcodeScanner.scanBarcode(
      '#ff6666', // Warna overlay yang ditampilkan saat pemindaian
      'Batal', // Pesan yang ditampilkan pada tombol batal
      true, // Aktifkan mode pemindaian dengan kamera belakang
      ScanMode.QR, // Mode pemindaian: QR code
    );

    if (!mounted) return;

    setState(() {
      scannedData = barcodeScanRes;
      _verifyPayment();
    });
  }

  Future<void> _verifyPayment() async {
    try {
      SharedPreferences prefs = await SharedPreferences.getInstance();
      var token = prefs.getString('token');
      Dio dio = Dio(); // Membuat instance Dio

      dio.options.headers['Authorization'] = 'Bearer $token';

      Response response = await dio.post(
        Service.apiUrl +
            '/verify-payment', // Ganti dengan URL endpoint verifikasi pembayaran Anda
        data: {'data': scannedData},
      );

      if (response.statusCode == 200) {
        // Verifikasi sukses
        print('Pembayaran berhasil diverifikasi');
      } else {
        // Verifikasi gagal
        print('Verifikasi pembayaran gagal: ${response.data}');
      }
    } catch (e) {
      print('Terjadi kesalahan: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Scan QR Code'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // ignore: deprecated_member_use
            RaisedButton(
              onPressed: _scanQRCode,
              child: const Text('Scan QR Code'),
            ),
            const SizedBox(height: 20),
            Image.network(
              qrcodeUrl,
              width: 200,
              height: 200,
              loadingBuilder: (context, child, progress) {
                if (progress == null) {
                  return child;
                }
                return const CircularProgressIndicator();
              },
              errorBuilder: (context, error, stackTrace) {
                return const Text('Failed to load image');
              },
            ),
            Text(
              scannedData,
              style: const TextStyle(fontSize: 16),
            ),
          ],
        ),
      ),
    );
  }
}
